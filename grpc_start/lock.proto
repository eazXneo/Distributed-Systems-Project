syntax = "proto3";

package lock_service;

service LockService {
    rpc client_init(Int) returns (Int);

    rpc lock_acquire(lock_args) returns (Response);

    rpc lock_release(lock_args) returns (Response);

    rpc file_append(file_args) returns (Response);

    rpc client_close(Int) returns (Int);
}


// lock acquire/release arguments, add any fields you want
message lock_args {
    int32 client_id = 1;
    
}

// server return Status, we will add more in the future
enum Status {
    SUCCESS = 0;   
    FIlE_ERROR = 1;    
}

// Message is added to include more info
message Response {
    Status status = 1;
    string message = 2;
}

// file append arguments, add any fields you want
message file_args {
    string filename = 1;
    bytes content = 2;
    int32 client_id = 3;
}

// field to hold an int, because the arguments and return values should be "message" type
message Int {
    int32 rc = 1;
}